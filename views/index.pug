doctype html
html
  head
    title Twitch Clip Player
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    style.
      /* Custom styles for the video player and loading animation */
      #videoplayer {
        border: 2px solid #007bff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }
      #loading-indicator {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100px;
      }
      .spinner-container {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .spinner-container p {
        margin-top: 10px;
        font-size: 1.2rem;
        color: #007bff;
      }
    script.
      function handleFormSubmit(event) {
        event.preventDefault();
        const form = event.target;
        const urlInput = form.querySelector("#url");
        const loadingIndicator = document.querySelector("#loading-indicator");

        // Show loading animation
        loadingIndicator.style.display = "flex";

        // Append &parent if not present
        const appHost = window.location.hostname;
        let url = urlInput.value;
        const parentParam = `&parent=${appHost}`;
        if (url.includes("&parent=")) {
          url = url.replace(/&parent=[^&]*/, parentParam); // Replace existing &parent
        } else {
          url += parentParam; // Add &parent
        }
        urlInput.value = url;

        // Submit the form
        form.submit();
      }
  body
    .container.mt-5
      h1.text-center Twitch Clip Player
      p.text-center Use this tool to extract and play MP4 URLs from Twitch embed links.

      // Explanation for getting embed URL
      .alert.alert-info
        h4 How to Get an Embed URL
        p To get an embed URL from a Twitch clip:
        ol
          li Find the embed code for the clip, which looks like this:
            pre
              code
                | &lt;iframe src="https://clips.twitch.tv/embed?clip=IncredulousBigCoyotePastaThat-mlf24oYJpnTA4C-v&amp;parent=www.example.com" frameborder="0" allowfullscreen="true" scrolling="no" height="378" width="620"&gt;&lt;/iframe&gt;
          li Copy the value inside the `src` attribute:
            pre
              code https://clips.twitch.tv/embed?clip=IncredulousBigCoyotePastaThat-mlf24oYJpnTA4C-v&parent=www.example.com
          li Remove the `&parent` parameter if it exists (optional):
            pre
              code https://clips.twitch.tv/embed?clip=IncredulousBigCoyotePastaThat-mlf24oYJpnTA4C-v
          li Paste the extracted URL into the form below.

      // Button to API Docs
      .text-center.mb-4
        a.btn.btn-primary(href=apiDocsUrl, target="_blank") View API Documentation

      // Form to try /get-mp4
      form(action="/try-get-mp4" method="get" onsubmit="handleFormSubmit(event)")
        .mb-3
          label(for="url") Enter Twitch Embed URL:
          input.form-control(type="text" name="url" id="url" placeholder="https://clips.twitch.tv/embed?clip=IncredulousBigCoyotePastaThat-mlf24oYJpnTA4C-v" required)
        button.btn.btn-success(type="submit") Try It

      // Loading animation
      .text-center.mt-3
        div#loading-indicator.spinner-container(style="display: none;")
          div.spinner-border.text-primary(role="status")
          p Loading your video...

      // Display video or error
      if videoSrc
        .mt-4
          h3.text-center Video Preview
          video#videoplayer(autoplay controls width="100%")
            source(src=videoSrc type="video/mp4")
          p.text-center
            a.btn.btn-primary(href=videoSrc, target="_blank") Download MP4
          script(defer).
            document.addEventListener("DOMContentLoaded", function() {
                const videoElement = document.getElementById('videoplayer');
                const playPromise = videoElement.play() || Promise.reject('');
                playPromise.then(() => {
                    // Video could be autoplayed, do nothing.
                }).catch(err => {
                    // Video couldn't be autoplayed because of autoplay policy. Mute it and play.
                    videoElement.muted = true;
                    videoElement.play();
                });
            });
      else if error
        .mt-4.alert.alert-danger.text-center= error